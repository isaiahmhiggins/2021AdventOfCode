#include <vector>
#include <iostream>

int main()
{
    std::vector<int64_t> crabs = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14, 14, 15, 15, 15, 16, 16, 16, 16, 17, 17, 18, 18, 18, 19, 19, 20, 20, 20, 20, 20, 21, 21, 21, 22, 22, 22, 23, 24, 24, 24, 24, 26, 28, 29, 30, 30, 30, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36, 37, 38, 39, 39, 40, 41, 41, 42, 42, 43, 43, 44, 44, 45, 46, 48, 49, 49, 49, 50, 50, 51, 51, 51, 51, 51, 53, 53, 54, 54, 55, 55, 55, 55, 57, 57, 58, 58, 59, 59, 60, 61, 62, 63, 63, 63, 63, 63, 63, 65, 65, 65, 65, 65, 65, 66, 66, 66, 67, 67, 67, 67, 67, 67, 68, 68, 69, 70, 70, 70, 72, 72, 72, 73, 74, 75, 75, 76, 77, 77, 78, 79, 80, 82, 82, 85, 86, 86, 86, 86, 88, 88, 89, 89, 89, 90, 91, 91, 93, 94, 95, 95, 96, 97, 97, 97, 98, 98, 98, 99, 99, 99, 100, 100, 100, 101, 101, 101, 101, 101, 101, 102, 102, 102, 102, 102, 103, 103, 104, 105, 105, 105, 106, 107, 109, 109, 109, 110, 110, 110, 110, 110, 111, 111, 111, 112, 112, 112, 112, 112, 113, 113, 113, 114, 114, 114, 115, 115, 115, 115, 115, 116, 116, 116, 116, 117, 117, 120, 120, 120, 121, 121, 125, 125, 127, 127, 129, 130, 130, 130, 131, 132, 133, 133, 133, 135, 136, 136, 136, 137, 137, 137, 140, 141, 141, 142, 142, 142, 143, 143, 147, 147, 148, 151, 153, 154, 154, 155, 155, 155, 155, 156, 156, 159, 160, 160, 161, 162, 164, 165, 166, 166, 166, 167, 168, 168, 168, 169, 172, 172, 173, 173, 174, 176, 177, 177, 178, 178, 178, 179, 183, 183, 184, 185, 185, 185, 186, 186, 187, 189, 191, 192, 194, 195, 196, 197, 197, 198, 199, 199, 200, 201, 201, 204, 206, 206, 206, 207, 208, 208, 208, 209, 210, 211, 214, 214, 214, 217, 219, 219, 221, 222, 222, 222, 224, 224, 228, 228, 229, 231, 231, 232, 232, 232, 232, 232, 233, 233, 234, 235, 237, 238, 238, 239, 239, 241, 242, 243, 244, 244, 248, 248, 249, 250, 251, 251, 253, 253, 254, 257, 259, 261, 262, 262, 263, 264, 266, 268, 269, 269, 270, 272, 274, 274, 274, 275, 275, 275, 276, 277, 277, 278, 278, 279, 280, 283, 284, 284, 286, 287, 287, 289, 290, 291, 291, 293, 294, 295, 295, 297, 297, 299, 300, 300, 302, 302, 304, 305, 305, 305, 306, 307, 311, 315, 316, 316, 319, 319, 320, 321, 321, 322, 323, 323, 324, 324, 324, 325, 327, 327, 328, 330, 332, 335, 337, 339, 340, 343, 345, 345, 348, 351, 351, 351, 353, 353, 354, 356, 359, 360, 362, 364, 366, 366, 368, 370, 370, 370, 372, 373, 375, 378, 379, 382, 382, 383, 386, 387, 387, 388, 388, 390, 391, 393, 395, 396, 397, 397, 397, 397, 398, 402, 402, 403, 403, 404, 407, 407, 407, 409, 409, 410, 411, 411, 412, 414, 414, 414, 415, 415, 421, 421, 422, 423, 424, 425, 426, 427, 428, 429, 429, 430, 432, 433, 433, 434, 435, 438, 439, 439, 439, 440, 440, 442, 442, 443, 444, 444, 446, 446, 447, 447, 447, 447, 452, 455, 455, 457, 458, 460, 464, 466, 470, 471, 472, 472, 472, 473, 475, 476, 477, 478, 481, 482, 483, 487, 491, 494, 496, 497, 498, 500, 501, 503, 504, 505, 511, 513, 513, 514, 514, 518, 522, 523, 523, 526, 528, 530, 538, 541, 542, 543, 547, 547, 552, 555, 555, 560, 563, 564, 564, 564, 566, 566, 567, 571, 572, 572, 573, 579, 580, 583, 583, 584, 584, 586, 587, 588, 588, 589, 602, 602, 602, 602, 604, 605, 608, 608, 610, 613, 615, 615, 617, 622, 628, 630, 631, 632, 632, 643, 643, 645, 646, 646, 653, 656, 657, 658, 659, 659, 659, 662, 664, 667, 671, 672, 672, 675, 676, 681, 684, 685, 686, 688, 690, 691, 695, 698, 699, 700, 704, 704, 710, 710, 711, 713, 713, 718, 719, 721, 723, 726, 727, 730, 731, 731, 731, 732, 733, 736, 736, 738, 742, 743, 745, 748, 752, 754, 757, 757, 759, 762, 766, 766, 773, 774, 774, 775, 775, 777, 781, 781, 784, 786, 787, 787, 787, 788, 788, 789, 794, 795, 799, 799, 801, 802, 807, 807, 809, 809, 810, 810, 811, 821, 823, 824, 828, 830, 838, 839, 840, 841, 842, 847, 847, 849, 849, 858, 859, 861, 873, 875, 877, 879, 880, 882, 883, 883, 886, 890, 892, 894, 898, 899, 899, 905, 905, 909, 911, 911, 914, 915, 916, 925, 932, 933, 934, 937, 938, 940, 953, 955, 967, 968, 974, 978, 979, 980, 981, 983, 983, 992, 994, 995, 996, 1001, 1001, 1004, 1005, 1008, 1008, 1009, 1012, 1018, 1018, 1024, 1033, 1047, 1048, 1054, 1058, 1063, 1069, 1070, 1075, 1075, 1080, 1084, 1086, 1090, 1090, 1091, 1096, 1096, 1099, 1100, 1101, 1102, 1106, 1108, 1109, 1110, 1122, 1123, 1128, 1132, 1144, 1152, 1156, 1163, 1177, 1180, 1187, 1187, 1194, 1210, 1213, 1217, 1219, 1220, 1223, 1227, 1227, 1237, 1237, 1238, 1240, 1247, 1247, 1259, 1262, 1262, 1263, 1265, 1266, 1274, 1280, 1281, 1282, 1283, 1286, 1293, 1295, 1302, 1315, 1318, 1326, 1331, 1334, 1339, 1357, 1362, 1369, 1388, 1392, 1393, 1400, 1401, 1403, 1405, 1408, 1419, 1424, 1426, 1427, 1427, 1442, 1444, 1447, 1449, 1459, 1465, 1475, 1496, 1515, 1518, 1519, 1549, 1559, 1572, 1573, 1581, 1586, 1611, 1618, 1625, 1636, 1654, 1667, 1674, 1694, 1696, 1703, 1708, 1710, 1748, 1807, 1816, 1823, 1855};
    // std::vector<int64_t> crabs = {16, 1, 2, 0, 4, 2, 7, 1, 2, 14};

    std::vector<int64_t> locations(2000);
    for (int i = 0; i < 2000; i++)
    {
        locations.emplace_back(0);
    }
    for (int64_t crab : crabs)
    {
        locations.at(crab)++;
    }

    int64_t min_cost = 2000 * crabs.size();
    int64_t min_cost_location = 0;
    for (int align_col = 0; align_col < 2000; align_col++)
    {
        int64_t cost = 0;
        for (int curr_col = 0; curr_col < 2000; curr_col++)
        {
            if (align_col < curr_col)
            {
                cost += locations.at(curr_col) * (curr_col - align_col);
            }
            else if (align_col > curr_col)
            {
                cost += locations.at(curr_col) * (align_col - curr_col);
            }
        }
        if (cost < min_cost)
        {
            min_cost = cost;
            min_cost_location = align_col;
        }
    }

    std::cout << "min cost: " << min_cost << " at " << min_cost_location << std::endl;

    return 0;
}